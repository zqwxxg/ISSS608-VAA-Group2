{
  "hash": "fcd55a0c501a7d9d9d4cb8c6eef00319",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Anomaly Detection and Time-Series Forecasting\"\ntitle-block-banner: true\nauthor: \"Xie Haoyang\"\ndate: \"March 23, 2025\"\ndate-modified: \"last-modified\"\nexecute:\n  echo: true\n  eval: true\n  warning: false\n  freeze: true\n---\n\n\n\n# 1. Introduction\n\nIn the realm of urban management and disaster prevention, rainfall early - warning systems play a crucial role, especially for a city - state like Singapore. With its unique geographical location and climate characteristics, Singapore is highly susceptible to the impacts of rainfall - related hazards such as floods. This project aims to develop a rainfall early - warning system using Shiny app, which integrates multiple data - driven analytical techniques.\n\nThis technical document focuses on the anomaly detection and time - series forecasting components of the system. These two aspects are fundamental for accurately identifying unusual rainfall patterns and predicting future rainfall amounts. By leveraging these capabilities, the system can provide timely and effective warnings, helping relevant departments and the public to better prepare for and respond to rainfall - induced events.\n\n# 2. Data Preparation\n\n## 2.1 Data sources\n\nRainfall data set is from Meteorological Service Singapore (MSS). Download the monthly data from this site for each rain station from 2018-2024 and pre-combine each CSV file using python to form weather_data.csv.\n\nActive rainfall station data are also from MSS. This dataset used to combine with rainfall data to exclude inactive rain stations.\n\n## 2.1 Installing the Required R Packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, ggplot2, SmartEDA)\n```\n:::\n\n\n\n## 2.2 Importing data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather <- read.csv(\"data/weather_data.csv\")\nactive_stations <- read.csv(\"data/active_rainfall_stations.csv\")\n```\n:::\n\n\n\n## 2.3 Cleaning data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Remove () for consistent naming\nweather$Station <- gsub(\"[()]\", \"\", trimws(as.character(weather$Station)))\nactive_stations$Station.Name <- gsub(\"[()]\", \"\", trimws(as.character(active_stations$Station.Name)))\n\n# Filter for active stations\nweather_active <- weather %>% \n  filter(Station %in% active_stations$Station.Name)\n\n# Select relevant columns for EDA \nweather_active <- weather_active %>%\n  select(\n    Station, Year, Month, Day,\n    Daily.Rainfall.Total..mm.,\n    Highest.30.Min.Rainfall..mm.,\n    Highest.60.Min.Rainfall..mm.,\n    Highest.120.Min.Rainfall..mm.,\n  ) %>%\n  filter(!is.na(Daily.Rainfall.Total..mm.)) %>%\n  merge(active_stations, by.x = \"Station\", by.y = \"Station.Name\") %>%\n  select(\n    Station, Year, Month, Day,\n    Daily.Rainfall.Total..mm.,\n    Highest.30.Min.Rainfall..mm.,\n    Highest.60.Min.Rainfall..mm.,\n    Highest.120.Min.Rainfall..mm.,\n    Latitude, Longitude\n  ) %>%\n  mutate(\n    Date = make_date(Year, Month, Day),\n    Station = as.factor(Station),\n    \n    # Add Monsoon Season Label\n    Season = case_when(\n      Month %in% c(12, 1, 2) | (Month == 3 & Day <= 15) ~ \"Northeast Monsoon\",\n      (Month == 3 & Day > 15) | Month %in% c(4, 5) ~ \"Inter-monsoon I\",\n      Month %in% c(6, 7, 8, 9) ~ \"Southwest Monsoon\",\n      Month %in% c(10, 11) ~ \"Inter-monsoon II\",\n      TRUE ~ \"Unknown\"\n    ),\n    Season = factor(Season, levels = c(\"Northeast Monsoon\", \"Inter-monsoon I\", \"Southwest Monsoon\", \"Inter-monsoon II\"))\n  ) %>%\n  arrange(Station, Date)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# all variables EDA (descriptive statistical)\nweather_active %>% ExpData(type = 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                          Descriptions   Value\n1                                   Sample size (nrow)   64853\n2                              No. of variables (ncol)      12\n3                    No. of numeric/interger variables       9\n4                              No. of factor variables       2\n5                                No. of text variables       0\n6                             No. of logical variables       0\n7                          No. of identifier variables       0\n8                                No. of date variables       1\n9             No. of zero variance variables (uniform)       0\n10               %. of variables having complete cases 75% (9)\n11   %. of variables having >0% and <50% missing cases 25% (3)\n12 %. of variables having >=50% and <90% missing cases  0% (0)\n13          %. of variables having >=90% missing cases  0% (0)\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_active %>% ExpData(type = 2)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Index                 Variable_Name Variable_Type Sample_n Missing_Count\n1      1                       Station        factor    64853             0\n2      2                          Year       numeric    64853             0\n3      3                         Month       numeric    64853             0\n4      4                           Day       numeric    64853             0\n5      5     Daily.Rainfall.Total..mm.       numeric    64853             0\n6      6  Highest.30.Min.Rainfall..mm.       numeric    64506           347\n7      7  Highest.60.Min.Rainfall..mm.       numeric    64485           368\n8      8 Highest.120.Min.Rainfall..mm.       numeric    64485           368\n9      9                      Latitude       numeric    64853             0\n10    10                     Longitude       numeric    64853             0\n11    11                          Date          Date    64853             0\n12    12                        Season        factor    64853             0\n   Per_of_Missing No_of_distinct_values\n1           0.000                    27\n2           0.000                     7\n3           0.000                    12\n4           0.000                    31\n5           0.000                   679\n6           0.005                   346\n7           0.006                   450\n8           0.006                   542\n9           0.000                    27\n10          0.000                    27\n11          0.000                  2557\n12          0.000                     4\n```\n\n\n:::\n:::\n\n\n\n## 2.4 Save the merged file separately for subsequent use\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# write.csv(weather_active, \"weather_active.csv\", row.names = FALSE)\n```\n:::\n\n\n\n# 3. Anomaly Detection and Time-Series Forecasting\n\n## 3.1 Data prediction to 2025\n\nTo prevent R from repeatedly training the model and affecting the performance. Therefore, the SRIMA model is pre-trained on the previously saved dataset using the SRIMA model to predict the daily rainfall data for each site in 2025 to form a new dataset.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nweather_data <- read.csv(\"data/weather_active_predicted.csv\")\nweather_data <- weather_data %>% mutate(Date = as.Date(Date))\n```\n:::\n\n\n\nARIMA (Auto-Regressive Integrated Moving Average) model is a popular time series forecasting method, and it is suitable for predicting rainfall data for the following reasons:\n\n-   **Handling of time - series data**: Rainfall data is a typical time - series data. ARIMA model can effectively capture the autocorrelation characteristics in time - series data, that is, the correlation between the current value and the historical value, and use this correlation to predict future values.\n\n-   **Model flexibility**: ARIMA model has a variety of parameter combinations, which can be adjusted according to the characteristics of different rainfall data sets to better fit the data and improve the prediction accuracy.\n\n-   **Consideration of stationarity**: Before using the ARIMA model, the stationarity of the data is usually tested and processed. This is very important for rainfall data, because the non - stationarity of rainfall data is common. By making the data stationary, the model can better extract the inherent law of the data and improve the prediction effect.\n\n## 3.2 Function\n\n#### Package installation\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(leaflet)\nlibrary(dplyr)\nlibrary(ggplot2)\n```\n:::\n\n\n\n#### Select Date\n\nBecause quarto does not facilitate an interactive design, the date is selected manually here. All interactivity will be available in the shinyapp!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselected_date <- as.Date(\"2025-12-01\")\n```\n:::\n\n\n\n#### Detecting anomalies\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nselected_data <- weather_data %>% filter(Date == selected_date)\n\n# Calculating Z-values and detecting anomalies\nmean_rain <- mean(selected_data$Daily.Rainfall.Total..mm., na.rm = TRUE)\nsd_rain <- sd(selected_data$Daily.Rainfall.Total..mm., na.rm = TRUE)\n\nselected_data <- selected_data %>% mutate(\n  z_score = (Daily.Rainfall.Total..mm. - mean_rain) / sd_rain,\n  is_anomaly = abs(z_score) > 2  \n)\n```\n:::\n\n\n\n#### Plotting\n\n::: panel-tabset\n## The plot\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"leaflet html-widget html-fill-item\" id=\"htmlwidget-d3817c51bb04eb405b73\" style=\"width:100%;height:464px;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-d3817c51bb04eb405b73\">{\"x\":{\"options\":{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}}},\"calls\":[{\"method\":\"addTiles\",\"args\":[\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",null,null,{\"minZoom\":0,\"maxZoom\":18,\"tileSize\":256,\"subdomains\":\"abc\",\"errorTileUrl\":\"\",\"tms\":false,\"noWrap\":false,\"zoomOffset\":0,\"zoomReverse\":false,\"opacity\":1,\"zIndex\":1,\"detectRetina\":false,\"attribution\":\"&copy; <a href=\\\"https://openstreetmap.org/copyright/\\\">OpenStreetMap<\\/a>,  <a href=\\\"https://opendatacommons.org/licenses/odbl/\\\">ODbL<\\/a>\"}]},{\"method\":\"addCircleMarkers\",\"args\":[[1.3087,1.3823,1.3191,1.2841,1.3821,1.3082,1.2923,1.4387,1.4388,1.37,1.3418,1.4067,1.305,1.295,1.3679,1.3865,1.4028,1.2937,1.3377,1.3443,1.3003,1.307,1.3417,1.3199,1.3325,1.3704,1.3214],[103.818,103.7607,103.8193,103.7888,103.7381,103.71,103.7815,103.736,103.7017,103.8271,103.8339,103.7832,103.9112,103.8622,103.9489,103.9413,103.9095,103.8127,103.8662,103.9441,103.8372,103.8907,103.8515,103.6613,103.755,103.8046,103.8577],[2.707599449157715,0.5327861309051514,2.336401748657226,0.5504716396331787,1.443010425567627,0.3474042654037476,0.8181842803955078,1.458158683776855,2.657522583007812,1.37886438369751,1.539072227478027,0.336792516708374,0.1499993562698364,0.6397592544555664,8,0.8084030151367188,2.879583740234375,1.719748306274414,-0.039101699,1.346041774749756,0.7693535804748535,0.1613690376281738,2.553812408447266,0.4415067672729492,-0.5322217464000001,0.4673266887664795,8],null,null,{\"interactive\":true,\"className\":\"\",\"stroke\":true,\"color\":[\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"red\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"red\"],\"weight\":5,\"opacity\":0.5,\"fill\":true,\"fillColor\":[\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"red\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"blue\",\"red\"],\"fillOpacity\":0.7},null,null,[\"Station: Botanic Garden<br>Rainfall: 13.5379972457886 mm\",\"Station: Bukit Panjang<br>Rainfall: 2.66393065452576 mm\",\"Station: Bukit Timah<br>Rainfall: 11.6820087432861 mm\",\"Station: Buona Vista<br>Rainfall: 2.75235819816589 mm\",\"Station: Choa Chu Kang Central<br>Rainfall: 7.21505212783813 mm\",\"Station: Jurong Pier<br>Rainfall: 1.73702132701874 mm\",\"Station: Kent Ridge<br>Rainfall: 4.09092140197754 mm\",\"Station: Kranji Reservoir<br>Rainfall: 7.29079341888428 mm\",\"Station: Lim Chu Kang<br>Rainfall: 13.2876129150391 mm\",\"Station: Lower Peirce Reservoir<br>Rainfall: 6.89432191848755 mm\",\"Station: Macritchie Reservoir<br>Rainfall: 7.69536113739014 mm\",\"Station: Mandai<br>Rainfall: 1.68396258354187 mm\",\"Station: Marine Parade<br>Rainfall: 0.749996781349182 mm\",\"Station: Nicoll Highway<br>Rainfall: 3.19879627227783 mm\",\"Station: Pasir Ris Central<br>Rainfall: 20.8719520568848 mm\",\"Station: Pasir Ris West<br>Rainfall: 4.04201507568359 mm\",\"Station: Punggol<br>Rainfall: 14.3979187011719 mm\",\"Station: Queenstown<br>Rainfall: 8.59874153137207 mm\",\"Station: Serangoon<br>Rainfall: -0.195508495 mm\",\"Station: Simei<br>Rainfall: 6.73020887374878 mm\",\"Station: Somerset Road<br>Rainfall: 3.84676790237427 mm\",\"Station: Tanjong Katong<br>Rainfall: 0.806845188140869 mm\",\"Station: Toa Payoh<br>Rainfall: 12.7690620422363 mm\",\"Station: Tuas<br>Rainfall: 2.20753383636475 mm\",\"Station: Ulu Pandan<br>Rainfall: -2.661108732 mm\",\"Station: Upper Peirce Reservoir<br>Rainfall: 2.3366334438324 mm\",\"Station: Whampoa<br>Rainfall: 20.9739379882812 mm\"],null,null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]}],\"limits\":{\"lat\":[1.2841,1.4388],\"lng\":[103.6613,103.9489]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n## The code\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nleaflet(selected_data) %>%\n  addTiles() %>%\n  addCircleMarkers(\n    ~Longitude, ~Latitude,\n    radius = ~ifelse(is_anomaly, 8, Daily.Rainfall.Total..mm. / 5), \n    color = ~ifelse(is_anomaly, \"red\", \"blue\"),\n    fillOpacity = 0.7,\n    popup = ~paste0(\"Station: \", Station, \"<br>Rainfall: \", Daily.Rainfall.Total..mm., \" mm\")\n  )\n```\n:::\n\n\n:::\n\n# 4. Story Board\n\nStoryboard aims to visually maps out user’s experience. It is a tool for making strong visual connection between the insights uncovered based on research and user’s interaction with the R Shiny dashboard application.\n\nShiny link: https://xiehaoyangxhy.shinyapps.io/Shiny_Anomaly_Detection_and_Time-Series_Forcasting/\n\nCode chunk below shows the simplified version of UI and Server components in R Shiny application\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(shiny)\nlibrary(leaflet)\nlibrary(dplyr)\n\n# Importing data\nweather_data <- read.csv(\"data/weather_active_predicted.csv\")\nweather_data <- weather_data %>% mutate(Date = as.Date(Date))\n\n# UI \nui <- fluidPage(\n  titlePanel(\"Rainfall Map Visualization\"),\n  sidebarLayout(\n    sidebarPanel(\n      dateInput(\"selected_date\", \"Select a Date:\", value = \"2025-01-01\", format = \"yyyy-mm-dd\")\n    ),\n    mainPanel(\n      leafletOutput(\"rainfall_map\")\n    )\n  )\n)\n\n# Server\nserver <- function(input, output) {\n  output$rainfall_map <- renderLeaflet({\n    req(input$selected_date)\n    \n    selected_data <- weather_data %>% filter(Date == input$selected_date)\n    \n    # Z-scroce\n    mean_rain <- mean(selected_data$Daily.Rainfall.Total..mm., na.rm = TRUE)\n    sd_rain <- sd(selected_data$Daily.Rainfall.Total..mm., na.rm = TRUE)\n    \n    selected_data <- selected_data %>% mutate(\n      z_score = (Daily.Rainfall.Total..mm. - mean_rain) / sd_rain,\n      is_anomaly = abs(z_score) > 2 \n    )\n    \n    # Plotting\n    leaflet(selected_data) %>%\n      addTiles() %>%\n      addCircleMarkers(\n        ~Longitude, ~Latitude,\n        radius = ~ifelse(is_anomaly, 8, Daily.Rainfall.Total..mm. / 5),  \n        color = ~ifelse(is_anomaly, \"red\", \"blue\"),\n        fillOpacity = 0.7,\n        popup = ~paste0(\"Station: \", Station, \"<br>Rainfall: \", Daily.Rainfall.Total..mm., \" mm\")\n      )\n  })\n}\n\n# Run Shiny App\nshinyApp(ui = ui, server = server)\n```\n\n::: {.cell-output-display}\n`<div style=\"width: 100% ; height: 400px ; text-align: center; box-sizing: border-box; -moz-box-sizing: border-box; -webkit-box-sizing: border-box;\" class=\"muted well\">Shiny applications not supported in static R Markdown documents</div>`{=html}\n:::\n:::\n\n\n\n#### User Guide - Anomaly Detection and Time-Series Forecasting\n\n#### 1. Time Selection\n\nPart 1 of the figure shows the Time Selection function, which allows the user to freely select any day from 2018-2025 to view the data. It should be noted that the data for 2018-2024 are actual data and 2025 are forecast data.\n\n#### 2. Anomaly detection\n\nThe second part of the figure represents anomaly detection. This function detects anomalies by calculating the Z-value, if the rainfall recorded at the station is greater than 2 Z-values, it is considered as an anomaly and is marked in red color\n\n#### 3. Rainfall Data Presentation\n\nThe third part of the figure shows the general rainfall data presentation. When the mouse is moved to the site you want to select, the site will automatically display the rainfall of the day, and at the same time, the larger the rainfall site the larger the area of the blue circle.\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/leaflet-1.3.1/leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/leaflet-1.3.1/leaflet.js\"></script>\n<link href=\"../../site_libs/leafletfix-1.0.0/leafletfix.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/proj4-2.6.2/proj4.min.js\"></script>\n<script src=\"../../site_libs/Proj4Leaflet-1.0.1/proj4leaflet.js\"></script>\n<link href=\"../../site_libs/rstudio_leaflet-1.3.1/rstudio_leaflet.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/leaflet-binding-2.2.2/leaflet.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}