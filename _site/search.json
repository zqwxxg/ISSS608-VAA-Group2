[
  {
    "objectID": "Pages/Prototype/TemporalAnalysis.html",
    "href": "Pages/Prototype/TemporalAnalysis.html",
    "title": "Temporal Rainfall Analysis",
    "section": "",
    "text": "This analysis examines rainfall variability over time to uncover patterns and support forecasting. Seasonal decomposition is used to identify underlying trends, cyclical monsoon effects, and irregular fluctuations in the data. Additionally, change point detection highlights long-term shifts in rainfall behavior, offering insights into potential climate-driven changes. Time-series clustering is also applied to group stations with similar rainfall behavior over time, helping to identify rainfall hotspots."
  },
  {
    "objectID": "Pages/Prototype/TemporalAnalysis.html#installing-packages",
    "href": "Pages/Prototype/TemporalAnalysis.html#installing-packages",
    "title": "Temporal Rainfall Analysis",
    "section": "1.1 Installing Packages",
    "text": "1.1 Installing Packages\n\npacman::p_load(tidyverse, lubridate, SmartEDA, ggplot2, tsibble, feasts, seasonal, imputeTS, fable, changepoint, dtwclust, sf, terra, tmap)"
  },
  {
    "objectID": "Pages/Prototype/TemporalAnalysis.html#importing-data",
    "href": "Pages/Prototype/TemporalAnalysis.html#importing-data",
    "title": "Temporal Rainfall Analysis",
    "section": "1.2 Importing Data",
    "text": "1.2 Importing Data\nA total of three datasets sourced from the Meteorological Service Singapore (MSS) are utilized in this analysis.\n\nWeather Data (2018 - 2024): Covers rainfall records from 63 stations across Singapore over a 7-year period (Jan 2018 - Dec 2024). Data was extracted, merged, and processed using Python to form a complete time-series dataset.\nRainfall Station Coordinates: Contains latitude and longitude information for all 63 rainfall stations.\nActive Rainfall Stations: Contains latitude and longitude information for 27 stations that are currently active.\n\n\nweather &lt;- read.csv(\"data/weather_data.csv\")\nactive_stations &lt;- read.csv(\"data/active_rainfall_stations.csv\")\nstations &lt;- read.csv(\"data/RainfallStation.csv\")\n\nFor the temporal analysis, only active rainfall stations with relatively complete and consistent time series data are included to ensure data quality and minimize missing values. Closed or intermittent stations are excluded, as they often introduce gaps or inconsistencies in the time series. For spatial analysis, all stations with available data at the specified time interval are utilized, including those no longer operational, provided they contain valid measurements for the selected timeframe. For clustering analysis, the analysis is restricted to active stations to maintain uniformity and reliability in the grouping process."
  },
  {
    "objectID": "Pages/Prototype/TemporalAnalysis.html#data-pre-processing",
    "href": "Pages/Prototype/TemporalAnalysis.html#data-pre-processing",
    "title": "Temporal Rainfall Analysis",
    "section": "4.1 Data Pre-processing",
    "text": "4.1 Data Pre-processing\nTo facilitate monthly time-series analysis, a new time-series object is created by aggregating daily rainfall data into monthly totals. This process begins by generating a new column, MonthYear, which rounds each Date down to the first day of its respective month using the floor_date() function. The data is then grouped by both Station and MonthYear, and the total monthly rainfall is computed for each station.\n\n# Create monthly time series object\ntsibble_data &lt;- weather_active %&gt;%\n  mutate(MonthYear = floor_date(Date, \"month\")) %&gt;%\n  group_by(Station, MonthYear) %&gt;%\n  summarise(MonthlyRain = sum(Daily.Rainfall.Total..mm.)) %&gt;% \n  ungroup()\n\nThe previously aggregated monthly rainfall data is then transformed into a proper tsibble (tidy temporal data frame) structure for time series analysis.\n\ntsibble_data &lt;- tsibble_data %&gt;%\n  mutate(MonthYear = yearmonth(MonthYear)) %&gt;%\n  as_tsibble(index = MonthYear, key = Station)\n\nThe Daily Rainfall Total variable contains a substantial proportion of missing values, emphasizing the need for appropriate imputation or data filtering strategies to ensure a complete and continuous monthly time series for each weather station. To address this, the fill_gaps() function is first applied to the tsibble_data to insert any missing months for each Station, even when no rainfall data was recorded - thereby enforcing a regular and complete time-series structure. The data is then grouped by Station to manage each time series independently. Within each group, na_interpolation() is used to estimate and fill missing values in the MonthlyRain column by interpolating based on adjacent data points.\n\ntsibble_data &lt;- tsibble_data %&gt;%\n  fill_gaps() %&gt;%\n  group_by(Station) %&gt;%\n  mutate(MonthlyRain = na_interpolation(MonthlyRain)) %&gt;%\n  ungroup()"
  },
  {
    "objectID": "Pages/Prototype/TemporalAnalysis.html#time-series-decomposition",
    "href": "Pages/Prototype/TemporalAnalysis.html#time-series-decomposition",
    "title": "Temporal Rainfall Analysis",
    "section": "4.2 Time Series Decomposition",
    "text": "4.2 Time Series Decomposition\nThe ts_decomposition function is designed to visually analyze the time series pattern of monthly rainfall for a specific weather station. This analysis focuses on the Bukit Panjang station to examine temporal rainfall dynamics over the 2018 - 2024 period.\n\nts_decomposition &lt;- function(station_name) {\n  tsibble_data %&gt;%\n    filter(Station == station_name) %&gt;%\n    gg_tsdisplay(MonthlyRain) +\n    labs(title = paste(\"Monthly Rainfall in\", station_name))\n}\n\n\nts_decomposition(\"Bukit Panjang\")\n\n\n\n\n\n\n\n\n\nTime Series Plot:\nThe rainfall pattern exhibits clear monthly fluctuations, with periodic peaks typically occurring around mid-year and year-end - indicative of strong seasonal influences, likely associated with Singapore’s inter-monsoon and monsoon periods. There is no evident long-term upward or downward trend, suggesting stationarity in the overall rainfall levels, although certain years, such as 2021, show unusually high peaks, which may be attributed to extreme weather events or anomalous climatic conditions.\nACF Plot:\nThe plot reveals significant correlations at lag 1 and lag 6, suggesting that monthly rainfall is influenced by recent months and may exhibit a semi-annual seasonal component. The decreasing autocorrelation beyond a few lags indicates short-term memory in the data, supporting the application of seasonal time series models such as ARIMA.\nSeasonal Plot by Month:\nMonthly patterns also highlight consistently higher rainfall in November - December, aligning with the Northeast monsoon season. Although seasonal trends are generally consistent, there is noticeable inter-annual variability; for instance, 2021 recorded an exceptionally high rainfall in August, while years like 2019 experienced more moderate and stable patterns."
  },
  {
    "objectID": "Pages/Prototype/TemporalAnalysis.html#stl-decomposition",
    "href": "Pages/Prototype/TemporalAnalysis.html#stl-decomposition",
    "title": "Temporal Rainfall Analysis",
    "section": "4.3 STL Decomposition",
    "text": "4.3 STL Decomposition\nThe stl_decomposition function is developed to perform seasonal-trend decomposition of monthly rainfall data using the STL (Seasonal-Trend decomposition using Loess) method, applied here to the Bukit Panjang weather station.\n\nstl_decomposition &lt;- function(station_name) {\n   tsibble_data %&gt;%\n    filter(Station == station_name) %&gt;%\n    model(stl = STL(MonthlyRain)) %&gt;%\n    components() %&gt;%\n    autoplot() +\n    labs(title = paste(\"STL Decomposition for\", station_name))\n}\n\n\nstl_decomposition(\"Bukit Panjang\")\n\n\n\n\n\n\n\n\n\nObserved Rainfall:\nThe decomposition reveals that the original time series (MonthlyRain) exhibits high variability, characterized by multiple spikes and dips, with pronounced peaks in specific months - indicating the presence of both strong seasonal effects and irregular fluctuations.\nTrend Component:\nIt shows a gradual decline from early 2018 to mid-2020, followed by a notable upward movement peaking around early 2022. After this period, the trend stabilizes, suggesting a phase of relatively consistent long-term rainfall levels. These trend shifts may be attributed to broader climatic changes, urbanization impacts, or variations in extreme weather events.\nSeasonal Component:\nThe seasonal pattern remains stable and consistent across the years, with recurring annual patterns - highlighting the influence of Singapore’s biannual monsoon seasons. This consistent seasonality reinforces the presence of regular intra-annual rainfall cycles typical of equatorial climates, making the STL approach well-suited for uncovering both short-term anomalies and long-term rainfall dynamics in the region.\nRemainder Component:\nThe remainder captures short-term, irregular fluctuations not explained by trend or seasonality. Sharp spikes and dips suggest the influence of extreme rainfall events or anomalies, which may correspond to localized storms or data irregularities. The residuals are relatively centered around zero, indicating that the decomposition model fits the data reasonably well."
  },
  {
    "objectID": "Pages/Prototype/TemporalAnalysis.html#change-point-detection",
    "href": "Pages/Prototype/TemporalAnalysis.html#change-point-detection",
    "title": "Temporal Rainfall Analysis",
    "section": "4.4 Change Point Detection",
    "text": "4.4 Change Point Detection\nThe detect_changepoints function is designed to identify and visualize change points in the mean of monthly rainfall data for a specific weather station. A change point indicates a significant shift in the average rainfall level, which might reflect climate events, seasonal shifts, or other environmental changes. The PELT method (Pruned Exact Linear Time) from the changepoint package is used. This detects points in the time series where the mean changes significantly, allowing for multiple change points. Here, we focus on analyzing Bukit Panjang station.\n\ndetect_changepoints &lt;- function(station_name) {\n  station_data &lt;- tsibble_data %&gt;%\n    filter(Station == station_name) %&gt;%\n    pull(MonthlyRain)\n\n  cpt_result &lt;- cpt.mean(station_data, method = \"PELT\")\n  \n  plot(\n    cpt_result,\n    main = paste(\"Change Points in Monthly Rainfall (Mean) for\", station_name),\n    xlab = \"Month Index\",\n    ylab = \"Rainfall (mm)\"\n  )\n}\n\n\nchangepoint_res &lt;- detect_changepoints(\"Bukit Panjang\")\n\n\n\n\n\n\n\n\nThe plot highlights a piecewise constant approximation (red steps) of the rainfall series, indicating where mean rainfall levels shift. Several distinct change points are observed throughout the series, showing abrupt changes in average monthly rainfall. Notably, a major increase is detected around the 40th month index (mid-2021), which corresponds to the period with the highest rainfall spike - this could reflect an extreme weather event or anomalous monsoon activity.\nThe plot_changepoints function visualizes change points in the mean rainfall over time for a specific weather station by combining time series plotting with change point detection.\n\nplot_changepoints &lt;- function(station_name) {\n  station_data &lt;- tsibble_data %&gt;%\n    filter(Station == station_name)\n  \n  rain &lt;- station_data$MonthlyRain\n  dates &lt;- station_data$MonthYear\n  \n  cpt_result &lt;- cpt.mean(rain, method = \"PELT\")\n  change_indices &lt;- cpts(cpt_result)\n  change_dates &lt;- as.Date(dates[change_indices])\n  \n  ggplot(station_data, aes(x = as.Date(MonthYear), y = MonthlyRain)) +\n    geom_line(color = \"steelblue\") +\n    geom_vline(xintercept = change_dates, linetype = \"dashed\", color = \"red\") +\n    labs(\n      title = paste(\"Monthly Rainfall with Change Points for\", station_name),\n      x = \"Year\",\n      y = \"Rainfall (mm)\"\n    ) +\n    theme_minimal()\n}\n\n\nplot_changepoints(\"Bukit Panjang\")\n\n\n\n\n\n\n\n\nThis plot visualizes frequent change points across the timeline, marked by red dashed vertical lines. The presence of numerous change points suggests high variability in monthly rainfall behavior, with frequent shifts in mean and possibly variance. The high density of change points may imply either genuine high-frequency climatic variability or the need to fine-tune sensitivity parameters in the detection algorithm."
  },
  {
    "objectID": "Pages/Prototype/TemporalAnalysis.html#data-pre-processing-1",
    "href": "Pages/Prototype/TemporalAnalysis.html#data-pre-processing-1",
    "title": "Temporal Rainfall Analysis",
    "section": "5.1 Data Pre-processing",
    "text": "5.1 Data Pre-processing\nThe analysis begins by aggregating the data to compute monthly rainfall totals, using only active stations.\n\nclust_data &lt;- weather_active %&gt;%\n  mutate(MonthYear = floor_date(Date, \"month\")) %&gt;%\n  group_by(Station, MonthYear) %&gt;%\n  mutate(MonthYear = yearmonth(MonthYear)) %&gt;%\n  summarise(MonthlyRain = sum(Daily.Rainfall.Total..mm.))\n\nSince the subsequent time series clustering requires a list of numeric vectors, with each element representing a time series (e.g., monthly rainfall for a specific station), the data is first reshaped into wide format, where each station forms a separate column.\n\nclust_data &lt;- clust_data %&gt;%\n  pivot_wider(\n    names_from = Station,\n    values_from = MonthlyRain\n  )\n\nTo address missing values and maintain continuity in the time series, na_interpolation() is applied to estimate and fill gaps based on adjacent data points, ensuring a smooth and complete dataset for each station.\n\nclust_data &lt;- clust_data %&gt;%\n  mutate(across(\n    -MonthYear,\n    ~ na_interpolation(.x)\n  ))\n\nOnce interpolation is complete, the data is then converted into list format, preparing it for input into time series clustering algorithms.\n\nrain_list &lt;- clust_data %&gt;%\n  select(-MonthYear) %&gt;%\n  as.list() %&gt;%\n  lapply(as.numeric)\n\nThe data is then standardized. The reinterpolate() function is used to resample all series to a common length, matching the longest series in the dataset. This step ensures structural alignment across time series for meaningful comparison. Subsequently, the zscore() function is applied to normalize each series, transforming them to have a zero mean and unit variance. This normalization removes differences in scale and focuses the analysis on the underlying patterns rather than magnitude.\n\nrain_list &lt;- reinterpolate(rain_list, new.length = max(lengths(rain_list)))\nrain_list &lt;- zscore(rain_list)"
  },
  {
    "objectID": "Pages/Prototype/TemporalAnalysis.html#dynamic-time-warping-dtw",
    "href": "Pages/Prototype/TemporalAnalysis.html#dynamic-time-warping-dtw",
    "title": "Temporal Rainfall Analysis",
    "section": "5.2 Dynamic Time Warping (DTW)",
    "text": "5.2 Dynamic Time Warping (DTW)\nThe clustering performance for values of k ranging from 2 to 6 is evaluated using the tsclust() function, which applies partitional clustering with standard DTW implementation (dtw) and Dynamic Time Warping Barycenter Averaging centroids (dba). For each value of k, it extracts the total within-cluster distances - how well each time series fits its assigned cluster - using clust@cldist and sums them to get an overall clustering error.\n\nevaluate &lt;- sapply(2:6, function(k) {\n  clust &lt;- tsclust(rain_list, type = \"partitional\", k = k, distance = \"dtw_basic\",\n                   centroid = \"dba\", seed = 123)\n  clust@cldist\n})\n\n\nevaluate_total &lt;- sapply(evaluate, sum)\ndf_elbow &lt;- data.frame(\n  k = 2:6,\n  total_distance = evaluate_total\n)\n\nAn elbow curve is plotted to identify the point at which increasing the number of clusters yields diminishing returns.\n\nggplot(df_elbow, aes(x = k, y = total_distance)) +\n  geom_line(color = \"steelblue\", size = 1) +\n  geom_point(color = \"darkred\", size = 3) +\n  labs(\n    title = \"Elbow Method for Choosing Optimal k\",\n    x = \"Number of Clusters (k)\",\n    y = \"Total Within-Cluster Distance\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nThere is a notable drop in total within-cluster distance from k = 2 to k = 4, suggesting that the model is improving significantly by adding more clusters. However, after k = 4, the decrease in total distance becomes much more gradual or even inconsistent, indicating that additional clusters do not meaningfully improve the clustering. So, the optimal cluster number is likely to be 3 or 4.\nThe clustering model is then fitted, and its performance is assessed using the silhouette score.\n\nmodel1 &lt;- tsclust(rain_list, type = \"partitional\", k = 3,\n                  distance = \"dtw_basic\",\n                  centroid = \"dba\",\n                  seed = 123)\n\n\ncvi(model1, type = \"internal\")\n\n       Sil         SF         CH         DB     DBstar          D        COP \n0.05852694 0.00000000 9.75637874 1.99474596 1.99474596 0.51550153 0.64998848 \n\n\n\nplot(model1, type = \"series\")\n\n\n\n\n\n\n\n\nAmong the number of clusters tested, the model with 3 clusters yielded the highest silhouette score; however, the value of 0.0536 is very close to zero, indicating a very weak clustering structure. This suggests that the time series within each cluster are not substantially more similar to one another than to those in other clusters. As visualized in the series plot, the clusters likely exhibit considerable overlap, and there may be an absence of distinct natural groupings in the data when using DTW distance as the similarity measure. This outcome points to either high variability across stations or low temporal differentiation in rainfall patterns that cannot be effectively captured by DTW-based clustering."
  },
  {
    "objectID": "Pages/Prototype/TemporalAnalysis.html#shape-based-distance-sbd",
    "href": "Pages/Prototype/TemporalAnalysis.html#shape-based-distance-sbd",
    "title": "Temporal Rainfall Analysis",
    "section": "5.3 Shape-based Distance (SBD)",
    "text": "5.3 Shape-based Distance (SBD)\nThe clustering performance is evaluated, which applies partitional clustering with shape-based distance (sbd) and shape-based centroids (k-Shape).\n\nevaluate &lt;- sapply(2:6, function(k) {\n  clust &lt;- tsclust(rain_list, type = \"partitional\", k = k, distance = \"sbd\",\n                   centroid = \"shape\", seed = 123)\n  clust@cldist\n})\n\n\nevaluate_total &lt;- sapply(evaluate, sum)\ndf_elbow &lt;- data.frame(\n  k = 2:6,\n  total_distance = evaluate_total\n)\n\nAn elbow curve is plotted to identify the point at which increasing the number of clusters yields diminishing returns.\n\nggplot(df_elbow, aes(x = k, y = total_distance)) +\n  geom_line(color = \"steelblue\", size = 1) +\n  geom_point(color = \"darkred\", size = 3) +\n  labs(\n    title = \"Elbow Method for Choosing Optimal k\",\n    x = \"Number of Clusters (k)\",\n    y = \"Total Within-Cluster Distance\"\n  ) +\n  theme_minimal()\n\n\n\n\n\n\n\n\nFrom k = 2 to k = 4, the total within-cluster distance gradually decreases, suggesting improved cohesion of clusters. Thus, the optimal number of clusters is likely to fall within the this range.\nThe clustering model is then fitted, and its performance is assessed using the silhouette score.\n\nmodel2 &lt;- tsclust(rain_list, type = \"partitional\", k = 2,\n                  distance = \"sbd\",\n                  centroid = \"shape\",\n                  seed = 123)\n\n\ncvi(model2, type = \"internal\")\n\n      Sil        SF        CH        DB    DBstar         D       COP \n0.2639895 0.4932070 5.4103980 2.6034182 2.6034182 0.1583115 0.3183351 \n\n\n\nplot(model2, type = \"series\")\n\n\n\n\n\n\n\n\nThe series plot for shape-based clustering with two clusters visually supports the moderate silhouette score of 0.264, indicating that while the clusters are somewhat distinct, there is still some overlap. In the plot, Cluster 1 displays greater variation in both shape and amplitude, with more scattered and less synchronized series, reflecting lower cohesion. In contrast, Cluster 2 contains time series that appear more consistent and closely aligned in their temporal patterns, suggesting strong cohesion within the cluster. Despite the differences in internal consistency between the two clusters, the overall similarity in their temporal dynamics likely reduces the separation between them. This explains the moderate silhouette score: the algorithm successfully groups series with broadly similar shapes, but the boundaries between clusters are not sharply defined, leading to only partially distinct cluster structures."
  },
  {
    "objectID": "Pages/Prototype/TemporalAnalysis.html#mapping-cluster-results",
    "href": "Pages/Prototype/TemporalAnalysis.html#mapping-cluster-results",
    "title": "Temporal Rainfall Analysis",
    "section": "5.4 Mapping Cluster Results",
    "text": "5.4 Mapping Cluster Results\nSince the SBD-based clustering model yielded a higher silhouette score, it is selected for mapping the clustering results onto the Singapore spatial context. The process begins by associating each station in the time series list with its corresponding cluster label derived from the fitted model.\n\nstation_clusters &lt;- data.frame(\n  Station = names(rain_list),\n  Cluster = as.factor(model2@cluster)\n)\n\nNext, the monthly rainfall totals for active stations are computed while preserving the geographic coordinates. The resulting data is converted into sf object, assigning longitude and latitude as spatial coordinates and transforming the coordinate reference system to Singapore’s SVY21 projection (EPSG:3414).\n\nc_rf_data &lt;- weather_active %&gt;%\n  mutate(MonthYear = floor_date(Date, \"month\")) %&gt;%\n  group_by(Station, MonthYear) %&gt;%\n  mutate(MonthYear = yearmonth(MonthYear)) %&gt;%\n  summarise(\n    MonthlyRain = sum(Daily.Rainfall.Total..mm.),\n    Latitude = first(Latitude),\n    Longitude = first(Longitude),\n    .groups = \"drop\"\n  )\n\n\nc_rf_data_sf &lt;- st_as_sf(c_rf_data,\n                      coords = c(\"Longitude\",\n                                 \"Latitude\"),\n                      crs= 4326) %&gt;%\n  st_transform(crs = 3414)\n\nThe Singapore boundary shapefile is imported and similarly transformed to the EPSG:3414 coordinate reference system to ensure spatial consistency with the rainfall data.\n\nsg_boundary &lt;- st_read(dsn = \"data/geospatial\", \n                    layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\Zi Qi\\Documents\\SMU\\Visual Analytics\\zqwxxg\\ISSS608-VAA-Group2\\Pages\\Prototype\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nThe cluster assignments are merged with the spatial rainfall data using left_join(), producing a geospatial dataset that contains rainfall summaries, coordinates, and time series cluster memberships for each station.\n\nstations_with_cluster &lt;- c_rf_data_sf %&gt;%\n  left_join(station_clusters, by = \"Station\")\n\nFinally, the clustered rainfall data is visualized as a spatial map.\n\ntm_check_fix()\n\ntmap_mode(\"view\")\n\ntm_shape(sg_boundary) +\n        tm_polygons(col = \"grey90\", border.col = \"white\") +\n        tm_shape(stations_with_cluster) +\n        tm_symbols(\n          col = \"Cluster\",\n          palette = \"hcl.set2\",\n          size = 0.7,\n          size.scale = tm_scale(1),\n          col.legend = tm_legend(\"Cluster\"),\n          popup.vars = \"Station\",\n          interactive = TRUE\n        ) +\n        tm_layout(\n          legend.outside = TRUE,\n          frame = FALSE\n        ) +\n        tm_title(\"Time Series Clusters by Station\") +\n        tm_view(basemap.server = \"Esri.WorldTopoMap\")\n\n\n\n\n\n\n\ntmap_mode(\"plot\")\n\nFrom the spatial distribution, we can interpret that:\n\nCluster 1 (green) stations are more common in the western and northwestern regions, including some in the southwest. These stations likely exhibit more variable or intense rainfall patterns, as inferred from earlier cluster analysis.\nCluster 2 (orange) stations are widely distributed across central, eastern, and northeastern Singapore, particularly concentrated in more urban or coastal regions. This suggests these stations experience more consistent or stable rainfall behavior over time."
  },
  {
    "objectID": "Pages/Prototype/Forecasting.html",
    "href": "Pages/Prototype/Forecasting.html",
    "title": "Anomaly Detection and Time-Series Forecasting",
    "section": "",
    "text": "In the realm of urban management and disaster prevention, rainfall early - warning systems play a crucial role, especially for a city - state like Singapore. With its unique geographical location and climate characteristics, Singapore is highly susceptible to the impacts of rainfall - related hazards such as floods. This project aims to develop a rainfall early - warning system using Shiny app, which integrates multiple data - driven analytical techniques.\nThis technical document focuses on the anomaly detection and time - series forecasting components of the system. These two aspects are fundamental for accurately identifying unusual rainfall patterns and predicting future rainfall amounts. By leveraging these capabilities, the system can provide timely and effective warnings, helping relevant departments and the public to better prepare for and respond to rainfall - induced events."
  },
  {
    "objectID": "Pages/Prototype/Forecasting.html#data-sources",
    "href": "Pages/Prototype/Forecasting.html#data-sources",
    "title": "Anomaly Detection and Time-Series Forecasting",
    "section": "2.1 Data sources",
    "text": "2.1 Data sources\nRainfall data set is from Meteorological Service Singapore (MSS). Download the monthly data from this site for each rain station from 2018-2024 and pre-combine each CSV file using python to form weather_data.csv.\nActive rainfall station data are also from MSS. This dataset used to combine with rainfall data to exclude inactive rain stations."
  },
  {
    "objectID": "Pages/Prototype/Forecasting.html#installing-the-required-r-packages",
    "href": "Pages/Prototype/Forecasting.html#installing-the-required-r-packages",
    "title": "Anomaly Detection and Time-Series Forecasting",
    "section": "2.1 Installing the Required R Packages",
    "text": "2.1 Installing the Required R Packages\n\npacman::p_load(tidyverse, ggplot2, SmartEDA)"
  },
  {
    "objectID": "Pages/Prototype/Forecasting.html#importing-data",
    "href": "Pages/Prototype/Forecasting.html#importing-data",
    "title": "Anomaly Detection and Time-Series Forecasting",
    "section": "2.2 Importing data",
    "text": "2.2 Importing data\n\nweather &lt;- read.csv(\"data/weather_data.csv\")\nactive_stations &lt;- read.csv(\"data/active_rainfall_stations.csv\")"
  },
  {
    "objectID": "Pages/Prototype/Forecasting.html#cleaning-data",
    "href": "Pages/Prototype/Forecasting.html#cleaning-data",
    "title": "Anomaly Detection and Time-Series Forecasting",
    "section": "2.3 Cleaning data",
    "text": "2.3 Cleaning data\n\n# Remove () for consistent naming\nweather$Station &lt;- gsub(\"[()]\", \"\", trimws(as.character(weather$Station)))\nactive_stations$Station.Name &lt;- gsub(\"[()]\", \"\", trimws(as.character(active_stations$Station.Name)))\n\n# Filter for active stations\nweather_active &lt;- weather %&gt;% \n  filter(Station %in% active_stations$Station.Name)\n\n# Select relevant columns for EDA \nweather_active &lt;- weather_active %&gt;%\n  select(\n    Station, Year, Month, Day,\n    Daily.Rainfall.Total..mm.,\n    Highest.30.Min.Rainfall..mm.,\n    Highest.60.Min.Rainfall..mm.,\n    Highest.120.Min.Rainfall..mm.,\n  ) %&gt;%\n  filter(!is.na(Daily.Rainfall.Total..mm.)) %&gt;%\n  merge(active_stations, by.x = \"Station\", by.y = \"Station.Name\") %&gt;%\n  select(\n    Station, Year, Month, Day,\n    Daily.Rainfall.Total..mm.,\n    Highest.30.Min.Rainfall..mm.,\n    Highest.60.Min.Rainfall..mm.,\n    Highest.120.Min.Rainfall..mm.,\n    Latitude, Longitude\n  ) %&gt;%\n  mutate(\n    Date = make_date(Year, Month, Day),\n    Station = as.factor(Station),\n    \n    # Add Monsoon Season Label\n    Season = case_when(\n      Month %in% c(12, 1, 2) | (Month == 3 & Day &lt;= 15) ~ \"Northeast Monsoon\",\n      (Month == 3 & Day &gt; 15) | Month %in% c(4, 5) ~ \"Inter-monsoon I\",\n      Month %in% c(6, 7, 8, 9) ~ \"Southwest Monsoon\",\n      Month %in% c(10, 11) ~ \"Inter-monsoon II\",\n      TRUE ~ \"Unknown\"\n    ),\n    Season = factor(Season, levels = c(\"Northeast Monsoon\", \"Inter-monsoon I\", \"Southwest Monsoon\", \"Inter-monsoon II\"))\n  ) %&gt;%\n  arrange(Station, Date)\n\n\n# all variables EDA (descriptive statistical)\nweather_active %&gt;% ExpData(type = 1)\n\n                                          Descriptions   Value\n1                                   Sample size (nrow)   64853\n2                              No. of variables (ncol)      12\n3                    No. of numeric/interger variables       9\n4                              No. of factor variables       2\n5                                No. of text variables       0\n6                             No. of logical variables       0\n7                          No. of identifier variables       0\n8                                No. of date variables       1\n9             No. of zero variance variables (uniform)       0\n10               %. of variables having complete cases 75% (9)\n11   %. of variables having &gt;0% and &lt;50% missing cases 25% (3)\n12 %. of variables having &gt;=50% and &lt;90% missing cases  0% (0)\n13          %. of variables having &gt;=90% missing cases  0% (0)\n\n\n\nweather_active %&gt;% ExpData(type = 2)\n\n   Index                 Variable_Name Variable_Type Sample_n Missing_Count\n1      1                       Station        factor    64853             0\n2      2                          Year       numeric    64853             0\n3      3                         Month       numeric    64853             0\n4      4                           Day       numeric    64853             0\n5      5     Daily.Rainfall.Total..mm.       numeric    64853             0\n6      6  Highest.30.Min.Rainfall..mm.       numeric    64506           347\n7      7  Highest.60.Min.Rainfall..mm.       numeric    64485           368\n8      8 Highest.120.Min.Rainfall..mm.       numeric    64485           368\n9      9                      Latitude       numeric    64853             0\n10    10                     Longitude       numeric    64853             0\n11    11                          Date          Date    64853             0\n12    12                        Season        factor    64853             0\n   Per_of_Missing No_of_distinct_values\n1           0.000                    27\n2           0.000                     7\n3           0.000                    12\n4           0.000                    31\n5           0.000                   679\n6           0.005                   346\n7           0.006                   450\n8           0.006                   542\n9           0.000                    27\n10          0.000                    27\n11          0.000                  2557\n12          0.000                     4"
  },
  {
    "objectID": "Pages/Prototype/Forecasting.html#save-the-merged-file-separately-for-subsequent-use",
    "href": "Pages/Prototype/Forecasting.html#save-the-merged-file-separately-for-subsequent-use",
    "title": "Anomaly Detection and Time-Series Forecasting",
    "section": "2.4 Save the merged file separately for subsequent use",
    "text": "2.4 Save the merged file separately for subsequent use\n\n# write.csv(weather_active, \"weather_active.csv\", row.names = FALSE)"
  },
  {
    "objectID": "Pages/Prototype/Forecasting.html#data-prediction-to-2025",
    "href": "Pages/Prototype/Forecasting.html#data-prediction-to-2025",
    "title": "Anomaly Detection and Time-Series Forecasting",
    "section": "3.1 Data prediction to 2025",
    "text": "3.1 Data prediction to 2025\nTo prevent R from repeatedly training the model and affecting the performance. Therefore, the SRIMA model is pre-trained on the previously saved dataset using the SRIMA model to predict the daily rainfall data for each site in 2025 to form a new dataset.\n\nweather_data &lt;- read.csv(\"data/weather_active_predicted.csv\")\nweather_data &lt;- weather_data %&gt;% mutate(Date = as.Date(Date))\n\nARIMA (Auto-Regressive Integrated Moving Average) model is a popular time series forecasting method, and it is suitable for predicting rainfall data for the following reasons:\n\nHandling of time - series data: Rainfall data is a typical time - series data. ARIMA model can effectively capture the autocorrelation characteristics in time - series data, that is, the correlation between the current value and the historical value, and use this correlation to predict future values.\nModel flexibility: ARIMA model has a variety of parameter combinations, which can be adjusted according to the characteristics of different rainfall data sets to better fit the data and improve the prediction accuracy.\nConsideration of stationarity: Before using the ARIMA model, the stationarity of the data is usually tested and processed. This is very important for rainfall data, because the non - stationarity of rainfall data is common. By making the data stationary, the model can better extract the inherent law of the data and improve the prediction effect."
  },
  {
    "objectID": "Pages/Prototype/Forecasting.html#function",
    "href": "Pages/Prototype/Forecasting.html#function",
    "title": "Anomaly Detection and Time-Series Forecasting",
    "section": "3.2 Function",
    "text": "3.2 Function\n\nPackage installation\n\nlibrary(leaflet)\nlibrary(dplyr)\nlibrary(ggplot2)\n\n\n\nSelect Date\nBecause quarto does not facilitate an interactive design, the date is selected manually here. All interactivity will be available in the shinyapp!\n\nselected_date &lt;- as.Date(\"2025-12-01\")\n\n\n\nDetecting anomalies\n\nselected_data &lt;- weather_data %&gt;% filter(Date == selected_date)\n\n# Calculating Z-values and detecting anomalies\nmean_rain &lt;- mean(selected_data$Daily.Rainfall.Total..mm., na.rm = TRUE)\nsd_rain &lt;- sd(selected_data$Daily.Rainfall.Total..mm., na.rm = TRUE)\n\nselected_data &lt;- selected_data %&gt;% mutate(\n  z_score = (Daily.Rainfall.Total..mm. - mean_rain) / sd_rain,\n  is_anomaly = abs(z_score) &gt; 2  \n)\n\n\n\nPlotting\n\nThe plotThe code\n\n\n\n\n\n\n\n\n\n\n\nleaflet(selected_data) %&gt;%\n  addTiles() %&gt;%\n  addCircleMarkers(\n    ~Longitude, ~Latitude,\n    radius = ~ifelse(is_anomaly, 8, Daily.Rainfall.Total..mm. / 5), \n    color = ~ifelse(is_anomaly, \"red\", \"blue\"),\n    fillOpacity = 0.7,\n    popup = ~paste0(\"Station: \", Station, \"&lt;br&gt;Rainfall: \", Daily.Rainfall.Total..mm., \" mm\")\n  )"
  },
  {
    "objectID": "Pages/Proposal.html",
    "href": "Pages/Proposal.html",
    "title": "Project Proposal",
    "section": "",
    "text": "As a tropical island nation, Singapore experiences dynamic rainfall patterns influenced by monsoon seasons, climate change, and localized weather variations. Sudden heavy downpours can lead to urban flooding, disrupting transportation and daily life. With increasing unpredictability in weather patterns, developing data-driven predictive insights is crucial for effective climate adaptation and urban resilience.\nBy analyzing rainfall patterns both spatially (geographic variations) and temporally (seasonal and long-term trends), we can detect anomalies, shifts, and emerging precipitation trends. Integrating time-series forecasting models further enables short-term and long-term rainfall predictions, supporting early warning systems, infrastructure planning, and climate mitigation strategies. This study aims to bridge the gap by quantifying rainfall variability and forecasting future precipitation to enhance decision-making. The insights gained will not only provide the public with more accurate weather information for better planning but also equip authorities with scientific data to improve flood warnings and emergency response measures in vulnerable areas."
  },
  {
    "objectID": "Pages/Proposal.html#data-extraction",
    "href": "Pages/Proposal.html#data-extraction",
    "title": "Project Proposal",
    "section": "Data Extraction",
    "text": "Data Extraction\nThe key datasets used in this project is Meteorological Service Singapore (MSS) – Rainfall & Weather Data. This dataset provides historical and real-time weather observations, including rainfall, temperature, and humidity levels across Singapore.\n\n\n\n\n\n\n\n\n\nVariable\nDescription\nTime Range & Spatial Coverage\n\n\n\n\nLocation\nRainfall data collected from 50-60 locations across Singapore\n2018 – Present, 62 locations\n\n\nYear-Month\nTimestamp of the recorded data (organized by year and month)\n2018 – Present, 62 locations\n\n\nTotal daily rainfall (mm)\nTotal daily rainfall, used to measure overall precipitation levels\n2018 – Present, 62 locations\n\n\nHourly rainfall intensity (mm/hr)\nHourly rainfall intensity, used to analyze extreme rainfall events\n2018 – Present, 62 locations\n\n\nMaximum 30/60/120-minute rainfall (mm)\nMaximum rainfall over 30/60/120 minutes, used to detect extreme weather patterns\n2018 – Present, 62 locations\n\n\nTemperature (°C)\nDaily temperature variations, used to analyze correlations with rainfall patterns\n2018 – Present, 62 locations\n\n\nHumidity (%)\nRecorded humidity levels, used to study the impact of humidity on rainfall\n2018 – Present, 62 locations\n\n\nWind speed (km/h)\nWind speed measurements, used to examine its relationship with rainfall patterns\n2018 – Present, 62 locations\n\n\nLongitude & Latitude of Rainfall Stations\nGeographic coordinates of the 41 rainfall stations for spatial mapping\nStatic data, 41 rainfall stations\n\n\nShapefile of Singapore\nGeospatial vector data for spatial analysis\nNationwide\n\n\nFlood prone areas in Singapore\nLow-lying areas with a history of flooding, used as an overlay in spatial analysis\n36 locations"
  },
  {
    "objectID": "Pages/Proposal.html#data-pre-processing",
    "href": "Pages/Proposal.html#data-pre-processing",
    "title": "Project Proposal",
    "section": "Data Pre-processing",
    "text": "Data Pre-processing\nTo ensure data consistency and accuracy, the collected datasets will undergo preprocessing before analysis. This process includes data cleaning, transformation, and integration of meteorological and geospatial data to prepare them for extreme rainfall prediction.\n\nData Collection & Integration: Historical rainfall data from 62 MSS stations will be downloaded monthly, merged, and standardized into a single structured dataset for spatial and temporal analysis.\nHandling Missing Values: Short-term missing values in rainfall, temperature, humidity, and wind speed will be handled using linear interpolation, while longer gaps will be smoothed using moving averages.\nTime-Series Processing (Resampling & Aggregation): Hourly rainfall data will be aggregated into daily, monthly, and seasonal trends to detect long-term variations and rolling averages will be applied for extreme event detection.\nGeospatial Data Processing: Longitude and latitude of rainfall stations will be retrieved using Google Maps & AI tools, enabling spatial interpolation (Kriging, IDW) for mapping rainfall intensity.\nFeature Engineering: To enhance the predictive accuracy of rainfall models, several features will be engineered. Extreme rainfall indicators, such as maximum 30/60/120-minute rainfall intensities, will be computed to detect extreme weather patterns. Additionally, seasonal variables, including monsoon season labels (Northeast/Southwest monsoon periods) and ENSO indices (El Niño/La Niña), will be integrated to assess the impact of climate variations on rainfall trends."
  },
  {
    "objectID": "Pages/Proposal.html#spatiotemporal-analysis",
    "href": "Pages/Proposal.html#spatiotemporal-analysis",
    "title": "Project Proposal",
    "section": "Spatiotemporal Analysis",
    "text": "Spatiotemporal Analysis\nThis step analyzes how rainfall varies across time (seasonal and yearly changes) and space (geographical regions in Singapore).\n\nTemporal Rainfall Analysis\n\nSeasonal decomposition:\n\nBreaks down the rainfall time series into trend, seasonality, and residual components\nHelps identify monsoon effects and periodic variations\n\nChange point detection:\n\nIdentifies structural shifts in rainfall trends (e.g., increased rainfall over decades due to climate change)\nHelps quantify significant changes in long-term precipitation patterns.\n\n\n\n\nSpatial Rainfall Analysis\n\nKriging interpolation:\n\nGenerates a rainfall intensity heatmap across Singapore based on the spatial distribution of precipitation.\nHelps identify areas experiencing higher or lower-than-average rainfall.\nCan be overlaid with flood-prone zones to assess potential risk areas.\n\nClustering analysis:\n\nUses machine learning, such as KMeans or DBSCAN to identify rainfall hotspots.\nGroups locations experiencing similar rainfall intensities, which is useful for urban water management."
  },
  {
    "objectID": "Pages/Proposal.html#anomaly-detection",
    "href": "Pages/Proposal.html#anomaly-detection",
    "title": "Project Proposal",
    "section": "Anomaly Detection",
    "text": "Anomaly Detection\nAnomaly analysis will be performed to detect unexpected rainfall patterns that may indicate extreme weather events.\nCompute Moving Averages:\n\nDetect long-term rainfall trends and short-term fluctuations.\nIdentify anomalous weather patterns that deviate from expected seasonal norms."
  },
  {
    "objectID": "Pages/Proposal.html#time-series-forecasting",
    "href": "Pages/Proposal.html#time-series-forecasting",
    "title": "Project Proposal",
    "section": "Time-Series Forecasting",
    "text": "Time-Series Forecasting\nThis step involves building a statistical model to predict future rainfall. This step involves building a statistical model to predict future rainfall by first splitting the dataset into training and testing sets to evaluate model performance. Statistical models such as ETS, ARIMA, and SARIMA are then implemented for forecasting. The model’s accuracy is assessed using metrics like Mean Absolute Error (MAE), Root Mean Square Error (RMSE), and the R² score to ensure reliable predictions. Finally, the model is used to forecast future rainfall values, which are validated against historical trends to assess predictive accuracy."
  },
  {
    "objectID": "Pages/About.html",
    "href": "Pages/About.html",
    "title": "Meet the RainSense Team",
    "section": "",
    "text": "We are a team of aspiring data and tech professionals from the Master of IT in Business (MITB) program at Singapore Management University (SMU). RainSense is our passion project-born from a shared interest in environmental analytics, smart city solutions, and impactful data storytelling.\nOur goal is to empower users with intuitive tools to explore Singapore’s rainfall variability and forecast patterns, blending advanced analytics with user-friendly design.\n\nMembers\n\nWong Zi Qi\nXie Haoyang\nWang Xingyun"
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html",
    "href": "Pages/Prototype/EDA_CDA.html",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "",
    "text": "pacman::p_load(tidyverse, lubridate, SmartEDA, \n               ggplot2, DataExplorer, dplyr, ggmap,\n               ggstatsplot, ggpubr)\n\n\n\n\nDue to the download method of the Singapore Meteorological Agency website, the relevant data for each location can only be downloaded on a monthly basis. However, our project requires downloading 86 files for 62 locations from 2018 to 2024, which means that one location needs to download 86 files. After Python processing, we merged them into one CSV file and named it weather_data\nWe will load the merged raw data weather_data.csv and the currently active station data (active_rainfall_stations.csv)\n\nweather &lt;- read.csv(\"data/weather_data.csv\")\nactive_stations &lt;- read.csv(\"data/active_rainfall_stations.csv\")"
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html#loading-packages",
    "href": "Pages/Prototype/EDA_CDA.html#loading-packages",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "",
    "text": "pacman::p_load(tidyverse, lubridate, SmartEDA, \n               ggplot2, DataExplorer, dplyr, ggmap,\n               ggstatsplot, ggpubr)"
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html#loading-data",
    "href": "Pages/Prototype/EDA_CDA.html#loading-data",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "",
    "text": "Due to the download method of the Singapore Meteorological Agency website, the relevant data for each location can only be downloaded on a monthly basis. However, our project requires downloading 86 files for 62 locations from 2018 to 2024, which means that one location needs to download 86 files. After Python processing, we merged them into one CSV file and named it weather_data\nWe will load the merged raw data weather_data.csv and the currently active station data (active_rainfall_stations.csv)\n\nweather &lt;- read.csv(\"data/weather_data.csv\")\nactive_stations &lt;- read.csv(\"data/active_rainfall_stations.csv\")"
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html#monthly-trends",
    "href": "Pages/Prototype/EDA_CDA.html#monthly-trends",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "3.1 Monthly trends",
    "text": "3.1 Monthly trends\n\nweather_active %&gt;%\n  group_by(Year, Month) %&gt;%\n  summarise(AvgRain = mean(Daily.Rainfall.Total..mm., na.rm = TRUE)) %&gt;%\n  ggplot(aes(x = Month, y = AvgRain, group = Year, color = as.factor(Year))) +\n  geom_line() + geom_point() +\n  labs(title = \"Monthly Average Rainfall\", y = \"Avg Rainfall (mm)\", color = \"Year\") +\n  scale_x_continuous(breaks = 1:12) +\n  theme_minimal()"
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html#comparison-of-rainfall-in-various-monsoon-seasons",
    "href": "Pages/Prototype/EDA_CDA.html#comparison-of-rainfall-in-various-monsoon-seasons",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "3.2 Comparison of Rainfall in Various Monsoon Seasons",
    "text": "3.2 Comparison of Rainfall in Various Monsoon Seasons\n\n# the rainfall in all seasons \nlibrary(ggplot2)\nggplot(weather_active, aes(x = Season, y = Daily.Rainfall.Total..mm.)) +\n  geom_boxplot(fill = \"skyblue\") +\n  theme_minimal() +\n  labs(title = \"Daily Rainfall across Monsoon Seasons\", y = \"Daily Rainfall (mm)\")"
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html#seasonal-distribution---average-monthly-rainfall",
    "href": "Pages/Prototype/EDA_CDA.html#seasonal-distribution---average-monthly-rainfall",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "3.3 Seasonal distribution - average monthly rainfall",
    "text": "3.3 Seasonal distribution - average monthly rainfall\nCheck which months have the highest rainfall throughout the year and whether it is consistent with the monsoon cycle\n\nweather_active %&gt;%\n  group_by(Month) %&gt;%\n  summarise(Avg_Rain = mean(Daily.Rainfall.Total..mm.)) %&gt;%\n  ggplot(aes(x = Month, y = Avg_Rain)) +\n  geom_col(fill = \"steelblue\") +\n  labs(title = \"Average Daily Rainfall by Month\", x = \"Month\", y = \"Avg Daily Rainfall (mm)\") +\n  scale_x_continuous(breaks = 1:12) +\n  theme_minimal()"
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html#annual-trend---total-annual-rainfall",
    "href": "Pages/Prototype/EDA_CDA.html#annual-trend---total-annual-rainfall",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "3.4 Annual trend - total annual rainfall",
    "text": "3.4 Annual trend - total annual rainfall\n\nweather_active %&gt;%\n  group_by(Year) %&gt;%\n  summarise(Total_Rainfall = sum(Daily.Rainfall.Total..mm.)) %&gt;%\n  ggplot(aes(x = Year, y = Total_Rainfall)) +\n  geom_line(group = 1, color = \"lightblue\", size = 1.2) +\n  geom_point(color = \"lightgreen\") +\n  labs(title = \"Total Rainfall by Year\", y = \"Total Rainfall (mm)\") +\n  scale_x_continuous(breaks = 2018:2024) +\n  theme_minimal()"
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html#rainfall-differences-at-different-sites",
    "href": "Pages/Prototype/EDA_CDA.html#rainfall-differences-at-different-sites",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "3.5 Rainfall differences at different sites",
    "text": "3.5 Rainfall differences at different sites\nCheck which region has the most rainfall and whether there is any geographical deviation.\n\nweather_active %&gt;%\n  group_by(Station) %&gt;%\n  summarise(Avg_Rain = mean(Daily.Rainfall.Total..mm.)) %&gt;%\n  arrange(desc(Avg_Rain)) %&gt;%\n \n  ggplot(aes(x = reorder(Station, -Avg_Rain), y = Avg_Rain)) +\n  geom_col(fill = \"lightblue\") +\n  labs(title = \"Rainfall differences at different sites\", x = \"Station\", y = \"Avg Daily Rainfall (mm)\") +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html#daily-rainfall-time-chart-overall-trend",
    "href": "Pages/Prototype/EDA_CDA.html#daily-rainfall-time-chart-overall-trend",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "3.6 Daily Rainfall Time Chart (Overall Trend)",
    "text": "3.6 Daily Rainfall Time Chart (Overall Trend)\nThis can help us see if there is a clear trend or extreme value\n\nweather_active %&gt;%\n  group_by(Date) %&gt;%\n  summarise(Daily_Rainfall_Sum = sum(Daily.Rainfall.Total..mm.)) %&gt;%\n  ggplot(aes(x = Date, y = Daily_Rainfall_Sum)) +\n  geom_line(color = \"blue\") +\n  labs(title = \"Daily Rainfall over Time\", y = \"Total Daily Rainfall (mm)\") +\n  theme_minimal()"
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html#explore-extreme-rainfall-events",
    "href": "Pages/Prototype/EDA_CDA.html#explore-extreme-rainfall-events",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "3.7 Explore extreme rainfall events",
    "text": "3.7 Explore extreme rainfall events\nWe can check the distribution of days with rainfall greater than 100mm.\n\nextreme_rain_years &lt;- weather_active %&gt;%\n  filter(Daily.Rainfall.Total..mm. &gt; 100) %&gt;%\n  count(Year)\n\nggplot(extreme_rain_years, aes(x = Year, y = n)) +\n  geom_col(fill = \"pink\") +\n  labs(title = \"Extreme Rainfall Days (&gt;100mm)\", y = \"Number of Days\") +\n  scale_x_continuous(breaks = seq(min(extreme_rain_years$Year), max(extreme_rain_years$Year), by = 1)) +\n  theme_minimal()"
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html#top-10-station-with-highest-extreme-rainfall-rate",
    "href": "Pages/Prototype/EDA_CDA.html#top-10-station-with-highest-extreme-rainfall-rate",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "3.8 Top 10 Station with Highest Extreme Rainfall Rate",
    "text": "3.8 Top 10 Station with Highest Extreme Rainfall Rate\n\n# Proportion of Extreme Rain Days\nweather_active %&gt;%\n  mutate(ExtremeRain = Daily.Rainfall.Total..mm. &gt; 100) %&gt;%\n  group_by(Station) %&gt;%\n  summarise(ExtremeRate = mean(ExtremeRain)) %&gt;%\n  arrange(desc(ExtremeRate)) %&gt;%\n  head(10) %&gt;%\n  ggplot(aes(x = reorder(Station, -ExtremeRate), y = ExtremeRate)) +\n  geom_col(fill = \"pink\") +\n  labs(title = \"Top 10 Stations with Highest Extreme Rainfall Rate\", y = \"Extreme Rainfall Rate\") +\n  theme_minimal() + \n  coord_flip()\n\n\n\n\n\n\n\n\nWe conducted EDA to uncover key temporal and spatial rainfall trends in Singapore. Monthly and yearly rainfall summaries were visualized to observe seasonality and long-term changes. Station-wise comparisons revealed spatial heterogeneity, while time series plots allowed us to identify potential anomalies and extreme rainfall patterns."
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html#spatial-rainfall-eda",
    "href": "Pages/Prototype/EDA_CDA.html#spatial-rainfall-eda",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "3.9 Spatial Rainfall EDA",
    "text": "3.9 Spatial Rainfall EDA\n\nlibrary(ggplot2)\nlibrary(ggmap)\nlibrary(ggrepel)\n\nweather_active %&gt;%\n  group_by(Station, Latitude, Longitude) %&gt;%\n  summarise(Avg_Rain = mean(Daily.Rainfall.Total..mm.)) %&gt;%\n  ggplot(aes(x = Longitude, y = Latitude, color = Avg_Rain)) +\n  geom_point(size = 3) +\n  scale_color_viridis_c() +\n  labs(title = \"Average Daily Rainfall by Station Location\", color = \"Avg Rainfall (mm)\") +\n  theme_minimal()"
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html#time-series-plot",
    "href": "Pages/Prototype/EDA_CDA.html#time-series-plot",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "3.10 Time series Plot",
    "text": "3.10 Time series Plot\n\n# Time Series Plot\nlibrary(forecast)\nlibrary(tsibble)\nlibrary(lubridate)\n\nrain_ts &lt;- weather_active %&gt;%\n  group_by(Date) %&gt;%\n  summarise(Total_Rain = sum(Daily.Rainfall.Total..mm., na.rm = TRUE)) %&gt;%\n  ts(start = c(2018, 1), frequency = 365)\n\nautoplot(rain_ts) +\n  labs(title = \"Total Daily Rainfall Over Time\", y = \"Rainfall (mm)\")"
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html#monthly-rainfall-by-monsoon-season",
    "href": "Pages/Prototype/EDA_CDA.html#monthly-rainfall-by-monsoon-season",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "3.11 Monthly Rainfall by Monsoon Season",
    "text": "3.11 Monthly Rainfall by Monsoon Season\n\nweather_active %&gt;%\n  group_by(Season, Month) %&gt;%\n  summarise(Avg_Rain = mean(Daily.Rainfall.Total..mm., na.rm = TRUE)) %&gt;%\n  ggplot(aes(x = Month, y = Avg_Rain, fill = Season)) +\n  geom_col(position = \"dodge\") +\n  scale_x_continuous(breaks = 1:12)\n\n\n\n\n\n\n\n  labs(title = \"Monthly Rainfall by Monsoon Season\")\n\n$title\n[1] \"Monthly Rainfall by Monsoon Season\"\n\nattr(,\"class\")\n[1] \"labels\"\n\n\nThis grouped bar chart reveals the monthly average daily rainfall categorized by monsoon seasons. We observe that rainfall tends to peak during the Northeast Monsoon (Dec–Jan) and the Inter-monsoon periods (Apr–May, Oct–Nov), while the Southwest Monsoon (Jun–Sep) exhibits relatively lower rainfall on average. These patterns align well with the seasonal transition periods and help in understanding Singapore’s bimodal rainfall distribution."
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html#monthly-average-rainfall-heatmap",
    "href": "Pages/Prototype/EDA_CDA.html#monthly-average-rainfall-heatmap",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "3.12 Monthly Average Rainfall Heatmap",
    "text": "3.12 Monthly Average Rainfall Heatmap\n\nmonthly_avg_rain &lt;- weather_active %&gt;%\n  group_by(Year, Month) %&gt;%\n  summarise(Avg_Rain = mean(Daily.Rainfall.Total..mm., na.rm = TRUE))\n\nggplot(monthly_avg_rain, aes(x = factor(Month), y = factor(Year), fill = Avg_Rain)) +\n  geom_tile(color = \"white\") +\n  geom_text(aes(label = round(Avg_Rain, 1)), size = 3, color = \"black\") +\n  scale_fill_viridis_c(option = \"C\", name = \"Avg Rainfall (mm)\") +\n  labs(\n    title = \"Monthly Average Rainfall Heatmap\",\n    x = \"Month\",\n    y = \"Year\"\n  ) +\n  theme_minimal() +\n  theme(axis.text.x = element_text(angle = 45, hjust = 1))"
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html#verify-if-there-are-significant-differences-between-different-monsoon-seasons",
    "href": "Pages/Prototype/EDA_CDA.html#verify-if-there-are-significant-differences-between-different-monsoon-seasons",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "4.1 Verify if there are significant differences between different Monsoon seasons",
    "text": "4.1 Verify if there are significant differences between different Monsoon seasons\n\nanova_result &lt;- aov(Daily.Rainfall.Total..mm. ~ Season, data = weather_active)\nsummary(anova_result)\n\n               Df   Sum Sq Mean Sq F value Pr(&gt;F)    \nSeason          3    37148   12383   55.83 &lt;2e-16 ***\nResiduals   64849 14383138     222                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n\n\nTukeyHSD(anova_result)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = Daily.Rainfall.Total..mm. ~ Season, data = weather_active)\n\n$Season\n                                          diff         lwr        upr     p adj\nInter-monsoon I-Northeast Monsoon    0.3643754 -0.06672501  0.7954758 0.1312325\nSouthwest Monsoon-Northeast Monsoon -0.7251748 -1.10644486 -0.3439048 0.0000061\nInter-monsoon II-Northeast Monsoon   1.5037046  1.04110295  1.9663062 0.0000000\nSouthwest Monsoon-Inter-monsoon I   -1.0895502 -1.50796752 -0.6711330 0.0000000\nInter-monsoon II-Inter-monsoon I     1.1393292  0.64566283  1.6329955 0.0000000\nInter-monsoon II-Southwest Monsoon   2.2288794  1.77807379  2.6796850 0.0000000\n\n\n\nggbetweenstats(\n  data = weather_active %&gt;% filter(Year == 2021),\n  x = Season,\n  y = Daily.Rainfall.Total..mm.,\n  type = \"p\",\n  pairwise.comparisons = TRUE,\n  pairwise.display = \"s\",\n  output = \"plot\"\n)\n\n\n\n\n\n\n\n\n\nlibrary(ggplot2)\nlibrary(ggpubr)\nlibrary(dplyr)\n\nsummary_stats &lt;- weather_active %&gt;%\n  group_by(Season) %&gt;%\n  summarise(\n    Mean_Rain = round(mean(Daily.Rainfall.Total..mm., na.rm = TRUE), 2),\n    Median_Rain = round(median(Daily.Rainfall.Total..mm., na.rm = TRUE), 2)\n  )\n\n\nggplot(weather_active, aes(x = Season, y = Daily.Rainfall.Total..mm., fill = Season)) +\n  geom_boxplot() +\n  stat_compare_means(method = \"anova\", label.y = 120) +  \n  stat_compare_means(\n    method = \"t.test\",\n    comparisons = list(\n      c(\"Inter-monsoon II\", \"Southwest Monsoon\"),\n      c(\"Southwest Monsoon\", \"Northeast Monsoon\"),\n      c(\"Inter-monsoon II\", \"Inter-monsoon I\")\n    ),\n    label = \"p.format\"\n  ) +\n \n  geom_text(\n    data = summary_stats,\n    aes(x = Season, y = 105, label = paste(\"Mean:\", Mean_Rain)),\n    inherit.aes = FALSE,\n    color = \"black\",\n    size = 3.5\n  ) +\n\n  geom_text(\n    data = summary_stats,\n    aes(x = Season, y = 95, label = paste(\"Median:\", Median_Rain)),\n    inherit.aes = FALSE,\n    color = \"darkblue\",\n    size = 3.5\n  ) +\n  labs(\n    title = \"Comparison of Daily Rainfall across Monsoon Seasons\",\n    y = \"Daily Rainfall (mm)\",\n    x = \"Monsoon Season\"\n  ) +\n  theme_minimal() +\n  theme(legend.position = \"none\")"
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html#does-extreme-rainfall-significantly-increase-in-different-years",
    "href": "Pages/Prototype/EDA_CDA.html#does-extreme-rainfall-significantly-increase-in-different-years",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "4.2 Does Extreme Rainfall significantly increase in different years",
    "text": "4.2 Does Extreme Rainfall significantly increase in different years\nObserve whether extreme rainfall (such as days&gt;100mm) has increased in recent years.\n\nextreme_days_by_year &lt;- weather_active %&gt;%\n  filter(Daily.Rainfall.Total..mm. &gt; 100) %&gt;%\n  count(Year)  \n\nmodel_poisson &lt;- glm(n ~ Year, family = \"poisson\", data = extreme_days_by_year)\n\nsummary(model_poisson)\n\n\nCall:\nglm(formula = n ~ Year, family = \"poisson\", data = extreme_days_by_year)\n\nCoefficients:\n              Estimate Std. Error z value Pr(&gt;|z|)    \n(Intercept) -280.06152   80.61708  -3.474 0.000513 ***\nYear           0.14012    0.03988   3.514 0.000442 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\n(Dispersion parameter for poisson family taken to be 1)\n\n    Null deviance: 112.372  on 6  degrees of freedom\nResidual deviance:  99.724  on 5  degrees of freedom\nAIC: 136.28\n\nNumber of Fisher Scoring iterations: 5\n\n\n\nggplot(extreme_days_by_year, aes(x = Year, y = n)) +\n  geom_point(size = 3, color = \"darkred\") +\n  geom_smooth(method = \"glm\", method.args = list(family = \"poisson\"),\n              se = TRUE, color = \"steelblue\") +\n  labs(title = \"Poisson Regression: Extreme Rainfall Days by Year\",\n       x = \"Year\", y = \"Extreme Rainfall Days\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nA Poisson regression was performed to evaluate whether the number of extreme rainfall days (daily rainfall &gt; 100mm) has increased over the years.\nThe analysis revealed a statistically significant positive association between year and the count of extreme rainfall days (β = 0.14, p &lt; 0.001).\nThis suggests that the frequency of extreme rainfall events has been increasing in recent years."
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html#regional-difference-analysis-whether-the-rainfall-in-the-southeast-northwest-and-northwest-is-different",
    "href": "Pages/Prototype/EDA_CDA.html#regional-difference-analysis-whether-the-rainfall-in-the-southeast-northwest-and-northwest-is-different",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "4.3 Regional difference analysis (whether the rainfall in the southeast, northwest, and northwest is different)",
    "text": "4.3 Regional difference analysis (whether the rainfall in the southeast, northwest, and northwest is different)\n\nweather_active &lt;- weather_active %&gt;%\n  mutate(MainRegion = case_when(\n    Station %in% c(\"Pasir Ris (West)\", \"Pasir Ris Central\", \"Simei\", \"Tanjong Katong\", \"Marine Parade\") ~ \"East\", \n    Station %in% c(\"Punggol\", \"Serangoon\") ~ \"Northeast\",\n    Station %in% c(\"Kranji Reservoir\", \"Mandai\") ~ \"North\",\n    Station %in% c(\"Jurong Pier\", \"Tuas\", \"Bukit Panjang\", \"Choa Chu Kang (Central)\", \"Lim Chu Kang\") ~ \"West\",\n    TRUE ~ \"Central\"\n  ))\n\n\nanova_mainregion &lt;- aov(Daily.Rainfall.Total..mm. ~ MainRegion, data = weather_active)\nsummary(anova_mainregion)\n\n               Df   Sum Sq Mean Sq F value Pr(&gt;F)    \nMainRegion      4    20792    5198   23.41 &lt;2e-16 ***\nResiduals   64848 14399494     222                   \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nTukeyHSD(anova_mainregion)\n\n  Tukey multiple comparisons of means\n    95% family-wise confidence level\n\nFit: aov(formula = Daily.Rainfall.Total..mm. ~ MainRegion, data = weather_active)\n\n$MainRegion\n                        diff        lwr        upr     p adj\nEast-Central      -1.0736654 -1.5316381 -0.6156928 0.0000000\nNorth-Central      0.4067185 -0.2045632  1.0180001 0.3647933\nNortheast-Central -1.3204749 -2.0449388 -0.5960109 0.0000066\nWest-Central       0.5729730  0.1125827  1.0333633 0.0061806\nNorth-East         1.4803839  0.7785093  2.1822585 0.0000001\nNortheast-East    -0.2468095 -1.0491876  0.5555687 0.9184639\nWest-East          1.6466384  1.0713803  2.2218965 0.0000000\nNortheast-North   -1.7271933 -2.6259352 -0.8284515 0.0000016\nWest-North         0.1662545 -0.5372000  0.8697090 0.9676690\nWest-Northeast     1.8934478  1.0896873  2.6972084 0.0000000\n\n\n\nggplot(weather_active, aes(x = MainRegion, y = Daily.Rainfall.Total..mm., fill = MainRegion)) +\n  geom_boxplot() +\n  stat_compare_means(method = \"anova\", label.y = 120) +\n  labs(title = \"Daily Rainfall by Region\", y = \"Rainfall (mm)\", x = \"Region\") +\n  theme_minimal()"
  },
  {
    "objectID": "Pages/Prototype/EDA_CDA.html#linear-regression-rainfallmonth",
    "href": "Pages/Prototype/EDA_CDA.html#linear-regression-rainfallmonth",
    "title": "Exploratory Data Analysis and Confirmatory Data Analysis",
    "section": "4.4 Linear Regression (Rainfall~Month)",
    "text": "4.4 Linear Regression (Rainfall~Month)\nObserve the overall trend of month vs rainfall\n\nlm_month &lt;- lm(Daily.Rainfall.Total..mm. ~ Month, data = weather_active)\nsummary(lm_month)\n\n\nCall:\nlm(formula = Daily.Rainfall.Total..mm. ~ Month, data = weather_active)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n -7.942  -7.237  -6.473   0.045 239.822 \n\nCoefficients:\n            Estimate Std. Error t value Pr(&gt;|t|)    \n(Intercept)  6.25013    0.12514  49.946   &lt;2e-16 ***\nMonth        0.14095    0.01698   8.301   &lt;2e-16 ***\n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 14.9 on 64851 degrees of freedom\nMultiple R-squared:  0.001061,  Adjusted R-squared:  0.001046 \nF-statistic:  68.9 on 1 and 64851 DF,  p-value: &lt; 2.2e-16\n\n\n\nlibrary(ggplot2)\n\nggplot(weather_active, aes(x = Month, y = Daily.Rainfall.Total..mm.)) +\n  geom_jitter(alpha = 0.2, color = \"lightblue\") +\n  geom_smooth(method = \"lm\", se = TRUE, color = \"darkblue\") +\n  labs(title = \"Linear Trend of Rainfall by Month\",\n       x = \"Month\", y = \"Daily Rainfall (mm)\") +\n  theme_minimal()\n\n\n\n\n\n\n\n\nClick here you can see the shiny app original version\nhttps://wangxingyun.shinyapps.io/final_project/"
  },
  {
    "objectID": "Pages/Prototype/SpatialAnalysis.html",
    "href": "Pages/Prototype/SpatialAnalysis.html",
    "title": "Spatial Rainfall Analysis",
    "section": "",
    "text": "Spatial variability is explored through interpolation techniques to generate choropleth maps of rainfall intensity across Singapore."
  },
  {
    "objectID": "Pages/Prototype/SpatialAnalysis.html#installing-packages",
    "href": "Pages/Prototype/SpatialAnalysis.html#installing-packages",
    "title": "Spatial Rainfall Analysis",
    "section": "1.1 Installing Packages",
    "text": "1.1 Installing Packages\n\npacman::p_load(jsonify, jsonlite, tidyverse, lubridate, tsibble, sf, terra, gstat, automap, tmap, viridis)"
  },
  {
    "objectID": "Pages/Prototype/SpatialAnalysis.html#importing-data",
    "href": "Pages/Prototype/SpatialAnalysis.html#importing-data",
    "title": "Spatial Rainfall Analysis",
    "section": "1.2 Importing Data",
    "text": "1.2 Importing Data\nA total of three datasets sourced from the Meteorological Service Singapore (MSS) are utilized in this analysis.\n\nWeather Data (2018 - 2024): Covers rainfall records from 63 stations across Singapore over a 7-year period (Jan 2018 - Dec 2024). Data was extracted, merged, and processed using Python to form a complete time-series dataset.\nRainfall Station Coordinates: Contains latitude and longitude information for all 63 rainfall stations.\nActive Rainfall Stations: Contains latitude and longitude information for 27 stations that are currently active.\n\n\nweather &lt;- read.csv(\"data/weather_data.csv\")\nactive_stations &lt;- read.csv(\"data/active_rainfall_stations.csv\")\nstations &lt;- read.csv(\"data/RainfallStation.csv\")\n\nFor spatial analysis, all stations with available data at the specified time interval are utilized, including those no longer operational, provided they contain valid measurements for the selected timeframe. For clustering analysis, the analysis is restricted to active stations to maintain uniformity and reliability in the grouping process."
  },
  {
    "objectID": "Pages/Prototype/SpatialAnalysis.html#data-pre-processing",
    "href": "Pages/Prototype/SpatialAnalysis.html#data-pre-processing",
    "title": "Spatial Rainfall Analysis",
    "section": "3.1 Data Pre-processing",
    "text": "3.1 Data Pre-processing\nThe weather station status is first incorporated to distinguish between active and inactive stations for visualization purposes.\n\nweather$Status &lt;- ifelse(weather$Station %in% active_stations$Station.Name, \"Active\", \"Inactive\")\n\nThe dataset is then converted into an sf object to facilitate geospatial analysis and mapping. To ensure proper spatial referencing, the Coordinate Reference System (CRS) is initially set to EPSG:4326, which uses the WGS 84 standard - commonly used for global positioning and representing geographic coordinates in degrees. Subsequently, the spatial object is transformed to EPSG:3414, also known as SVY21 / Singapore TM, a projected coordinate system specifically designed for mapping within Singapore. Unlike WGS 84, SVY21 expresses coordinates in meters, making it more suitable for accurate distance measurements, spatial interpolation, and localized mapping within the Singapore context.\n\nweather_sf &lt;- st_as_sf(weather, \n                      coords = c(\"Longitude\",\n                                 \"Latitude\"),\n                      crs= 4326) %&gt;%\n  st_transform(crs = 3414)\n\nIt is visualized as shown below.\n\n# tm_check_fix()\n# tmap_mode(\"view\")\n# \n# tm_shape(weather_sf) +\n#   tm_symbols(\n#     fill = \"Status\",\n#     fill.scale = tm_scale(c(\"Active\" = \"#00b050\", \"Inactive\" = \"#ff4d4d\")),\n#     size = 0.6,\n#     size.scale = tm_scale(1),\n#     fill.legend = tm_legend(\"Status\"),\n#     popup.vars = c(\"Station\")\n#     ) +\n#   tm_title(\"Weather Station Map\") +\n#   tm_view(basemap.server = \"Esri.WorldTopoMap\")\n\nNext, the data is aggregated to represent monthly spatial points, summarizing rainfall measurements by station and month. For spatial referencing, the latitude and longitude values for each station are extracted using the first() function, as these coordinates remain constant within each station.\n\nrf_data &lt;- weather %&gt;%\n  mutate(MonthYear = floor_date(Date, \"month\")) %&gt;%\n  group_by(Station, MonthYear) %&gt;%\n  mutate(MonthYear = yearmonth(MonthYear)) %&gt;%\n  summarise(\n    MonthlyRain = sum(Daily.Rainfall.Total..mm., na.rm = TRUE),\n    Latitude = first(Latitude),\n    Longitude = first(Longitude),\n    .groups = \"drop\"\n  )\n\n\nrf_data_sf &lt;- st_as_sf(rf_data, \n                      coords = c(\"Longitude\",\n                                 \"Latitude\"),\n                      crs= 4326) %&gt;%\n  st_transform(crs = 3414)\n\nThe Singapore boundary shapefile is imported and similarly transformed to the EPSG:3414 coordinate reference system to ensure spatial consistency with the rainfall data.\n\nsg_boundary &lt;- st_read(dsn = \"data/geospatial\", \n                    layer = \"MPSZ-2019\") %&gt;%\n  st_transform(crs = 3414)\n\nReading layer `MPSZ-2019' from data source \n  `C:\\Users\\Zi Qi\\Documents\\SMU\\Visual Analytics\\zqwxxg\\ISSS608-VAA-Group2\\Pages\\Prototype\\data\\geospatial' \n  using driver `ESRI Shapefile'\nSimple feature collection with 332 features and 6 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 103.6057 ymin: 1.158699 xmax: 104.0885 ymax: 1.470775\nGeodetic CRS:  WGS 84\n\n\nThe pre-processed data is visualized using a quantitative dot map, offering a spatial overview of monthly rainfall distribution across Singapore at the station level.\n\n# tm_check_fix()\n# tmap_mode(\"view\")\n# \n# tm_shape(sg_boundary) +\n# tm_borders(lwd = 1, col = \"gray50\") +\n#   tm_shape(rf_data_sf) +\n#   tm_dots(fill = 'MonthlyRain', size = 0.8) +\n#   tm_title(\"Monthly Rainfall Distribution by Station\")\n\n\ntmap_mode(\"plot\")\n\nEach blue dot represents a rainfall monitoring station, with the network demonstrating even spatial distribution across the island. This comprehensive coverage spans urban, suburban, central, coastal, and peripheral regions, ensuring that the dataset effectively captures localized variations in precipitation."
  },
  {
    "objectID": "Pages/Prototype/SpatialAnalysis.html#interpolation-preparation",
    "href": "Pages/Prototype/SpatialAnalysis.html#interpolation-preparation",
    "title": "Spatial Rainfall Analysis",
    "section": "3.2 Interpolation Preparation",
    "text": "3.2 Interpolation Preparation\nSpatial interpolation requires the creation of an interpolation grid prior to execution. A regular grid of points is generated within Singapore’s geographical boundaries. Subsequently, two interpolation techniques - Inverse Distance Weighting (IDW) and Ordinary Kriging - are implemented and comparatively evaluated.\n\nCreating Interpolation Grid\nFirst, a raster template is created over the boundary at a specified resolution using terra::rast(), producing a dense grid across the region.\n\ngrid &lt;- terra::rast(sg_boundary, \n                    nrows = 690, \n                    ncols = 1075)\n\nThe centroid coordinates (x, y) of each raster cell are then extracted using terra::xyFromCell().\n\nxy &lt;- terra::xyFromCell(grid, \n                        1:ncell(grid))\n\nThese coordinates are subsequently converted into an sf object via st_as_sf(), with the coordinate reference system (CRS) aligned to that of sg_boundary. Finally, st_filter(coop, sg_boundary) is applied to retain only grid points within Singapore’s boundaries, discarding external points. The resulting object comprises uniformly spaced spatial points constrained to Singapore’s exact geographical extent.\n\ncoop &lt;- st_as_sf(as.data.frame(xy), \n                 coords = c(\"x\", \"y\"),\n                 crs = st_crs(sg_boundary))\ncoop &lt;- st_filter(coop, sg_boundary)\nhead(coop)\n\nSimple feature collection with 6 features and 0 fields\nGeometry type: POINT\nDimension:     XY\nBounding box:  xmin: 25883.42 ymin: 50231.33 xmax: 26133.32 ymax: 50231.33\nProjected CRS: SVY21 / Singapore TM\n                   geometry\n1 POINT (25883.42 50231.33)\n2  POINT (25933.4 50231.33)\n3 POINT (25983.38 50231.33)\n4 POINT (26033.36 50231.33)\n5 POINT (26083.34 50231.33)\n6 POINT (26133.32 50231.33)\n\n\n\n\nSelecting Month\nThe select_month_data function extracts data for a specified month. This can be utilized to create animated choropleth visualizations over time, facilitating dynamic representation of rainfall patterns across locations. This analysis specifically examines March 2024.\n\nselect_month_data &lt;- function(month_label) {\n  month_data &lt;- rf_data %&gt;%\n    filter(format(MonthYear, \"%Y %b\") == month_label)\n  \n  month_data_sf &lt;- rf_data_sf %&gt;%\n    filter(format(MonthYear, \"%Y %b\") == month_label)\n  \n  return(list(data = month_data, data_sf = month_data_sf))\n}\n\n\nmonth_label &lt;- \"2024 Mar\"\nresult &lt;- select_month_data(month_label)\nmonth_data &lt;- result$data\nmonth_data_sf &lt;- result$data_sf"
  },
  {
    "objectID": "Pages/Prototype/SpatialAnalysis.html#idw-interpolation",
    "href": "Pages/Prototype/SpatialAnalysis.html#idw-interpolation",
    "title": "Spatial Rainfall Analysis",
    "section": "3.3 IDW Interpolation",
    "text": "3.3 IDW Interpolation\nThe interpolation process begins by creating a gstat model object, where MonthlyRain ~ 1 specifies that interpolation is based only on spatial location (no covariates). The model configuration employs the 5 nearest known rainfall stations (nmax = 5) to maintain local relevance while preventing oversmoothing. The inverse distance power parameter (idp) is set to 0, implementing uniform spatial weighting to avoid overemphasis of isolated high/low points. This configuration reflects Singapore’s precipitation characteristics, where rainfall patterns exhibit relatively smooth spatial gradients due to the country’s small size.\n\nres &lt;- gstat(formula = MonthlyRain ~ 1, \n             locations = month_data_sf, \n             nmax = 5,\n             set = list(idp = 0))\n\nThen, predict(res, coop) computes rainfall estimates at the regularly spaced points. The x and y coordinates are extracted and stored.\n\n# Predict\nresp &lt;- predict(res, coop)\n\n[inverse distance weighted interpolation]\n\nresp$x &lt;- st_coordinates(resp)[,1]\nresp$y &lt;- st_coordinates(resp)[,2]\nresp$pred &lt;- resp$var1.pred\n\nFinally, terra::rasterize() converts the point-based predictions into a raster grid by averaging predictions in each raster cell. This raster can then be visualized as a continuous rainfall surface over Singapore.\n\n# Rasterize\npred &lt;- terra::rasterize(resp, grid, field = \"pred\", fun = \"mean\")\n\nThe interpolated rainfall surface is then visualized through a choropleth map.\n\ntmap_mode(\"plot\")\n\ntm_shape(pred) +\n      tm_raster(\n        col.legend = tm_legend(title = \"Total rainfall (mm)\")\n      ) +\n      tm_title(\n    text = paste(\"Distribution of Monthly Rainfall -\", month_label),\n  ) +\n      tm_layout(frame = TRUE) +\n      tm_compass(type = \"8star\", size = 2) +\n      tm_scalebar(position = c(\"left\", \"bottom\")) +\n      tm_grid(alpha = 0.2)\n\n\n\n\n\n\n\n\nThe western and southwestern regions (e.g., Jurong, Clementi, Bukit Batok, and Tuas) recorded the highest rainfall levels (200-220 mm), shown in the darkest blue shades. This aligns with typical late Northeast Monsoon influence or possible localized convective rainfall in those areas.\nCentral zones such as Bukit Timah, Bishan, and Queenstown received 160-200 mm, indicating moderate but widespread rainfall across Singapore’s central catchment area. These areas consistently experience slightly elevated rainfall due to topography and vegetation.\nThe northeastern and eastern parts of the island (including Changi, Punggol, and Pasir Ris) showed lower rainfall values (100-140 mm). This east-west gradient may reflect weakened monsoon effects or shifts in storm tracks during the transition period between monsoons."
  },
  {
    "objectID": "Pages/Prototype/SpatialAnalysis.html#ordinary-kringing",
    "href": "Pages/Prototype/SpatialAnalysis.html#ordinary-kringing",
    "title": "Spatial Rainfall Analysis",
    "section": "3.4 Ordinary Kringing",
    "text": "3.4 Ordinary Kringing\nKriging interpolation leverages spatial autocorrelation to generate optimal predictions. The process begins by using autofitVariogram() to automatically fit a variogram model to the rainfall data. The variogram characterizes how rainfall values are spatially related over distance. The fitted variogram is then plotted to visualize the spatial structure of the data.\n\nv_auto &lt;- autofitVariogram(MonthlyRain ~ 1, \n                         month_data_sf)\nplot(v_auto)\n\n\n\n\n\n\n\n\nThe semi-variance increases smoothly with distance and levels off near the sill, forming a classic variogram curve. The smooth and gradual rise toward the sill suggests a well-structured spatial process with strong short-range autocorrelation. The absence of a nugget effect and tight clustering of points around the curve indicate high spatial predictability and data quality.\nNext, a kriging model is created using the gstat function, incorporating the fitted variogram model and the rainfall data.\n\nk &lt;- gstat(formula = MonthlyRain ~ 1, \n           model = v_auto$var_model,\n           data = month_data_sf)\n\nThe predict() applies the kriging model to the grid points, generating spatial predictions of monthly rainfall. The predicted values are extracted along with their x and y coordinates. Finally, terra::rasterize() converts these point predictions into a raster object, creating a continuous surface that represents interpolated rainfall estimates across the entire study area.\n\nresp &lt;- predict(k, coop)\n\n[using ordinary kriging]\n\nresp$x &lt;- st_coordinates(resp)[,1]\nresp$y &lt;- st_coordinates(resp)[,2]\nresp$pred &lt;- resp$var1.pred\nresp$pred &lt;- resp$pred\n\nkpred &lt;- terra::rasterize(resp, grid, \n                         field = \"pred\")\n\nThe interpolated rainfall surface is then visualized through a choropleth map.\n\ntmap_mode(\"plot\")\n\ntm_shape(kpred) + \n  tm_raster(\n    col.scale = tm_scale_continuous(values = \"brewer.blues\"),\n    col.legend = tm_legend(title = \"Total monthly\\nrainfall (mm)\")) +\n  tm_title(\n    text = paste(\"Distribution of Monthly Rainfall -\", month_label),\n  ) +\n  tm_layout(frame = TRUE) +\n  tm_compass(type = \"8star\", size = 2) +\n  tm_scalebar(position = c(\"left\", \"bottom\")) +\n  tm_grid(alpha = 0.2)\n\n\n\n\n\n\n\n\nHigher rainfall concentrations (above 250 mm) are observed in south-central and southwestern regions, likely around areas such as Queenstown, Bukit Merah, and Clementi. These zones appear in the darkest blue tones. Other localized high-rainfall zones include parts of the northern and western regions, suggesting patchy rainfall accumulation influenced by local convection or microclimates. Lower rainfall levels (below 150 mm) are observed in the eastern and northeastern zones, such as Tampines, Changi, and Pulau Ubin, which appear in lighter shades of blue."
  },
  {
    "objectID": "Pages/Prototype/SpatialAnalysis.html#visual-differences",
    "href": "Pages/Prototype/SpatialAnalysis.html#visual-differences",
    "title": "Spatial Rainfall Analysis",
    "section": "3.5 Visual Differences",
    "text": "3.5 Visual Differences\n\nAppearance:\nThe IDW interpolation map exhibits a more segmented appearance, characterized by sharper transitions between rainfall zones. In contrast, the Ordinary Kriging map displays smoother gradients, offering continuous transitions in rainfall estimates that reflect a more natural spatial variation.\nHotspot areas:\nBoth methods identify rainfall hotspots in the western and central regions of Singapore. However, while the IDW map presents these areas with clearly defined boundaries, the Kriging map portrays similar hotspots with a more diffused and realistic spatial spread, aligning with expected spatial autocorrelation patterns.\nLow-rainfall zones:\nIn the eastern and northeastern zones, the IDW map shows distinctly delineated low-rainfall areas, whereas the Kriging map reflects a similar trend but with more gradual transitions, resulting in a smoother interpretation of rainfall decline across space.\nInterpolation quality:\nOverall, IDW performs well in areas with dense station coverage, but it may oversimplify spatial variability, especially where rainfall patterns are complex. Ordinary Kriging, on the other hand, provides statistically optimal estimates, particularly effective when spatial dependence is strong."
  }
]